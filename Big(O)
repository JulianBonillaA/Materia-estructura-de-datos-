import time

# Solución iterativa
def factorial_iterativo(n):
    resultado = 1
    for i in range(1, n + 1):
        resultado *= i
    return resultado

# Solución recursiva
def factorial_recursivo(n):
    if n == 0 or n == 1:
        return 1
    return n * factorial_recursivo(n - 1)

# Medición de tiempo
def medir_tiempo(funcion, n):
    inicio = time.time()
    resultado = funcion(n)
    fin = time.time()
    return resultado, fin - inicio

# Pruebas con un número grande
n = 900  # Puedes cambiarlo para ver diferencias más notables

# Ejecutar y medir
resultado_iter, tiempo_iter = medir_tiempo(factorial_iterativo, n)
resultado_rec, tiempo_rec = medir_tiempo(factorial_recursivo, n)

# Mostrar resultados
print(f"Factorial de {n} (iterativo): {resultado_iter}")
print(f"Tiempo iterativo: {tiempo_iter:.10f} segundos")

print(f"Factorial de {n} (recursivo): {resultado_rec}")
print(f"Tiempo recursivo: {tiempo_rec:.10f} segundos")

# Análisis de complejidad
print("\nComplejidad temporal:")
print("Iterativo: O(n) (bucle for recorre n veces)")
print("Recursivo: O(n) (n llamadas recursivas)")
